{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","href","onClick","handleTabClick","title","content","App","useState","setSelectedTabId","selectedTabTitle","setSelectedTabTitle","ReactDOM","render","document","getElementById"],"mappings":"iMAYaA,EAAO,SAAC,GAIP,IAHZC,EAGW,EAHXA,KACAC,EAEW,EAFXA,cACAC,EACW,EADXA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAQvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBAEE,UAAQ,MACRE,UAAWF,EAAIC,KAAOH,EAAYG,GAC9B,YACA,GALN,SAOE,mBACEG,KAAI,WAAMJ,EAAIC,IACd,UAAQ,UACRI,QAAS,kBArBA,SAACL,GAClBA,EAAIC,KAAOL,GACbC,EAAcG,GAmBWM,CAAeN,IAHhC,SAKGA,EAAIO,SAXFP,EAAIC,WAiBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,gBACGJ,QADH,IACGA,OADH,EACGA,EAAaU,cC3CTb,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAS7BC,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOd,EAAP,KAAsBe,EAAtB,KACA,EAAgDD,mBAAS,SAAzD,mBAAOE,EAAP,KAAyBC,EAAzB,KAOA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,KAGtB,cAAC,EAAD,CACEjB,KAAMA,EACNC,cAAeA,EACfC,cAdgB,SAACG,GACrBW,EAAiBX,EAAIC,IACrBY,EAAoBb,EAAIO,cCrB5BO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4e695018.chunk.js","sourcesContent":[" type Tab = {\n   id: string,\n   title: string,\n   content: string\n };\n\ntype Props = {\n  tabs: { id: string, title: string, content: string }[];\n  selectedTabId: string;\n  onTabSelected: (data: Tab) => void;\n};\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}: Props) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleTabClick = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={tab.id === selectedTab.id\n                ? 'is-active'\n                : ''}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTabClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\n type Tab = {\n   id: string,\n   title: string,\n   content: string\n };\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n  const [selectedTabTitle, setSelectedTabTitle] = useState('Tab 1');\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n    setSelectedTabTitle(tab.title);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTabTitle}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}